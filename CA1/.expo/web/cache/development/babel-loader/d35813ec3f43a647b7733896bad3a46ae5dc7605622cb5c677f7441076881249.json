{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Exam3cStart = function Exam3cStart() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState('chicken_breast'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    ingredient = _useState6[0],\n    setIngredient = _useState6[1];\n  var getMeals = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var url = \"https://www.themealdb.com/api/json/v1/1/filter.php?i=\" + ingredient;\n        var response = yield fetch(url);\n        var json = yield response.json();\n        setData(json.meals);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getMeals() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getMeals();\n  }, [ingredient]);\n  var renderMeal = function renderMeal(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: item.strMeal\n      }), _jsx(Image, {\n        source: {\n          uri: item.strMealThumb\n        },\n        style: {\n          width: '50%',\n          height: 100\n        }\n      })]\n    });\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Food Searching by Key Word\"\n    }), _jsx(TextInput, {\n      style: {\n        height: 30,\n        borderColor: 'black',\n        borderWidth: 1\n      },\n      onChangeText: function onChangeText(text) {\n        return setIngredient(text);\n      },\n      value: ingredient,\n      placeholder: \"Enter ingredient\"\n    }), _jsxs(Text, {\n      children: [\"Main Ingredient: \", ingredient]\n    }), _jsx(FlatList, {\n      data: data,\n      renderItem: renderMeal,\n      keyExtractor: function keyExtractor(item) {\n        return item.idMeal;\n      }\n    })]\n  });\n};\nexport default Exam3cStart;","map":{"version":3,"names":["React","useState","useEffect","Text","FlatList","View","Image","TextInput","Button","jsx","_jsx","jsxs","_jsxs","Exam3cStart","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","ingredient","setIngredient","getMeals","_ref","_asyncToGenerator","url","response","fetch","json","meals","error","console","apply","arguments","renderMeal","_ref2","item","children","strMeal","source","uri","strMealThumb","style","width","height","borderColor","borderWidth","onChangeText","text","value","placeholder","renderItem","keyExtractor","idMeal"],"sources":["C:/Users/79181/OneDrive/Documents/GitHub/CS153_Sum23_CA1Yuxuan/CA1/components/APIdemo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, FlatList, View, Image, TextInput, Button } from 'react-native';\r\n\r\nconst Exam3cStart = () => {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [ingredient, setIngredient] = useState('chicken_breast');\r\n\r\n    const getMeals = async () => {\r\n        try {\r\n          const url = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${ingredient}`;\r\n          const response = await fetch(url);\r\n          const json = await response.json();\r\n          setData(json.meals); \r\n        } catch (error) {\r\n          console.error(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMeals()},[ingredient]);\r\n\r\n    const renderMeal = ({item}) => (\r\n        <View>\r\n            <Text>{item.strMeal}</Text>\r\n            <Image \r\n                source = {{uri: item.strMealThumb}} \r\n                style = {{width: '50%', height: 100}}\r\n            />\r\n        </View>\r\n    )\r\n\r\n    return(\r\n        <View>\r\n            <Text>Food Searching by Key Word</Text>\r\n            <TextInput\r\n                style={{ height: 30, borderColor: 'black', borderWidth: 1}}\r\n                onChangeText = {text => setIngredient(text)}\r\n                value = {ingredient}\r\n                placeholder = \"Enter ingredient\"\r\n            />\r\n            <Text>Main Ingredient: {ingredient}</Text>\r\n                <FlatList \r\n                    data = {data} \r\n                    renderItem = {renderMeal} \r\n                    keyExtractor = {item => item.idMeal}\r\n                />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default Exam3cStart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}