{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    todos = _useState2[0],\n    setTodos = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newTodo = _useState4[0],\n    setNewTodo = _useState4[1];\n  var addTodo = function addTodo() {\n    if (newTodo.length > 0) {\n      setTodos([].concat(_toConsumableArray(todos), [{\n        id: Date.now(),\n        name: newTodo,\n        completed: false\n      }]));\n      setNewTodo(\"\");\n    }\n  };\n  var deleteTodo = function deleteTodo(id) {\n    setTodos(todos.filter(function (todo) {\n      return todo.id !== id;\n    }));\n  };\n  var toggleTodo = function toggleTodo(id) {\n    setTodos(todos.map(function (todo) {\n      return todo.id === id ? _objectSpread(_objectSpread({}, todo), {}, {\n        completed: !todo.completed\n      }) : todo;\n    }));\n  };\n  return _jsxs(View, {\n    style: {\n      padding: 20\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 40\n      },\n      children: \"TodoList\"\n    }), _jsx(TextInput, {\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 20\n      },\n      onChangeText: function onChangeText(text) {\n        return setNewTodo(text);\n      },\n      value: newTodo,\n      placeholder: \"Enter new todo\"\n    }), _jsx(Button, {\n      title: \"Add Todo\",\n      onPress: addTodo\n    }), _jsx(FlatList, {\n      data: todos,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginBottom: 30\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return toggleTodo(item.id);\n            },\n            children: _jsx(Text, {\n              style: {\n                fontSize: 20,\n                textDecorationLine: item.completed ? 'line-through' : 'none'\n              },\n              children: item.name\n            })\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return deleteTodo(item.id);\n            },\n            children: _jsx(Text, {\n              style: {\n                marginLeft: 20,\n                color: 'red'\n              },\n              children: \"Delete\"\n            })\n          }), _jsx(Text, {\n            children: item.completed ? 'Completed' : 'Not Completed'\n          })]\n        });\n      }\n    })]\n  });\n};\nexport default App;","map":{"version":3,"names":["React","useState","View","Button","Text","TextInput","FlatList","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","todos","setTodos","_useState3","_useState4","newTodo","setNewTodo","addTodo","length","concat","_toConsumableArray","id","Date","now","name","completed","deleteTodo","filter","todo","toggleTodo","map","_objectSpread","style","padding","children","fontSize","height","borderColor","borderWidth","marginBottom","onChangeText","text","value","placeholder","title","onPress","data","keyExtractor","item","toString","renderItem","_ref","flexDirection","alignItems","textDecorationLine","marginLeft","color"],"sources":["C:/Users/79181/OneDrive/Documents/GitHub/CS153_Sum23_CA1Yuxuan/CA1/components/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Button, Text, TextInput, FlatList, TouchableOpacity } from 'react-native';\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState(\"\");\r\n\r\n  const addTodo = () => {\r\n    if (newTodo.length > 0) {\r\n      setTodos([...todos, { id: Date.now(), name: newTodo, completed: false }]);\r\n      setNewTodo(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteTodo = (id) => {\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  const toggleTodo = (id) => {\r\n    setTodos(todos.map(todo => \r\n      todo.id === id ? { ...todo, completed: !todo.completed } : todo\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <View style={{ padding: 20 }}>\r\n      <Text style={{ fontSize: 40 }}>TodoList</Text>\r\n      \r\n      <TextInput \r\n        style={{ height: 40, borderColor: 'gray', borderWidth: 1, marginBottom: 20 }}\r\n        onChangeText={text => setNewTodo(text)}\r\n        value={newTodo}\r\n        placeholder=\"Enter new todo\"\r\n      />\r\n      \r\n      <Button \r\n        title=\"Add Todo\"\r\n        onPress={addTodo}\r\n      />\r\n\r\n      <FlatList \r\n        data={todos}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 30 }}>\r\n            <TouchableOpacity onPress={() => toggleTodo(item.id)}>\r\n              <Text style={{ fontSize: 20, textDecorationLine: item.completed ? 'line-through' : 'none' }}>{item.name}</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => deleteTodo(item.id)}>\r\n              <Text style={{ marginLeft: 20, color: 'red' }}>Delete</Text>\r\n            </TouchableOpacity>\r\n            <Text>{item.completed ? 'Completed' : 'Not Completed'}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}