{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport open_api_key from \"./open_api_key\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatGPTDemo = function ChatGPTDemo(_ref) {\n  var route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(route.params.prompt),\n    _useState4 = _slicedToArray(_useState3, 2),\n    promptText = _useState4[0],\n    setPromptText = _useState4[1];\n  var _useState5 = useState(route.params.prompt),\n    _useState6 = _slicedToArray(_useState5, 2),\n    prompt = _useState6[0],\n    setPrompt = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var getResponse = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var url = 'https://api.openai.com/v1/chat/completions';\n        var config = {\n          headers: {\n            Accept: 'application/json, text/plain, */*',\n            'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + open_api_key\n          }\n        };\n        var msg_data = {\n          \"model\": \"gpt-3.5-turbo\",\n          \"messages\": [{\n            \"role\": \"user\",\n            \"content\": prompt\n          }],\n          \"temperature\": 0.7\n        };\n        var response = yield axios.post(url, msg_data, config);\n        var result = yield response.data;\n        setLoading(false);\n        setData(result);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function getResponse() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getResponse();\n  }, [prompt]);\n  var ChatResponse = function ChatResponse(_ref3) {\n    var role = _ref3.role,\n      content = _ref3.content;\n    return _jsxs(View, {\n      style: {\n        backgroundColor: 'lightblue',\n        margin: 10,\n        padding: 20\n      },\n      children: [_jsx(Text, {\n        children: \"ChatGPT Response to the prompt is:\"\n      }), _jsx(Text, {\n        style: {\n          backgroundColor: 'white'\n        },\n        children: content\n      })]\n    });\n  };\n  var debugging = true;\n  return _jsxs(SafeAreaView, {\n    style: {\n      flex: 1,\n      fontSize: 24,\n      margin: 30\n    },\n    children: [_jsx(Text, {\n      children: \"API Demo\"\n    }), _jsx(Text, {\n      style: {\n        marginTop: 30\n      },\n      children: \"Prompt: \"\n    }), _jsx(TextInput, {\n      style: {\n        height: 40,\n        borderColor: 'gray',\n        borderWidth: 1,\n        padding: 10,\n        margin: 10\n      },\n      onChangeText: function onChangeText(text) {\n        return setPromptText(text);\n      },\n      value: promptText\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        setLoading(true);\n        setData({\n          choices: []\n        });\n        setPrompt(promptText);\n      },\n      title: loading ? 'awaiting response' : \"Ask GPT\",\n      color: \"#841584\",\n      accessibilityLabel: \"Send\"\n    }), debugging && _jsx(Text, {\n      children: JSON.stringify(data.choices)\n    }), _jsx(FlatList, {\n      data: data.choices,\n      keyExtractor: function keyExtractor(_ref4) {\n        var index = _ref4.index;\n        return index;\n      },\n      renderItem: function renderItem(_ref5) {\n        var item = _ref5.item;\n        return _jsx(ChatResponse, _objectSpread({}, item.message));\n      }\n    })]\n  });\n};\nexport default ChatGPTDemo;","map":{"version":3,"names":["React","useState","useEffect","SafeAreaView","Text","TextInput","Button","FlatList","View","axios","open_api_key","jsx","_jsx","jsxs","_jsxs","ChatGPTDemo","_ref","route","_useState","_useState2","_slicedToArray","data","setData","_useState3","params","prompt","_useState4","promptText","setPromptText","_useState5","_useState6","setPrompt","_useState7","_useState8","loading","setLoading","getResponse","_ref2","_asyncToGenerator","url","config","headers","Accept","Authorization","msg_data","response","post","result","error","console","apply","arguments","ChatResponse","_ref3","role","content","style","backgroundColor","margin","padding","children","debugging","flex","fontSize","marginTop","height","borderColor","borderWidth","onChangeText","text","value","onPress","choices","title","color","accessibilityLabel","JSON","stringify","keyExtractor","_ref4","index","renderItem","_ref5","item","_objectSpread","message"],"sources":["C:/Users/79181/OneDrive/Documents/GitHub/CS153_Sum23_CA1Yuxuan/CA1/components/ChatGPTDemo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { SafeAreaView, Text, TextInput, Button, FlatList, View } from 'react-native';\r\nimport axios from 'axios';\r\nimport open_api_key from './open_api_key';\r\n\r\nconst ChatGPTDemo = ({ route }) => {\r\n  const [data,setData] = useState([]);\r\n  const [promptText, setPromptText] = useState(route.params.prompt);\r\n  const [prompt,setPrompt] = useState(route.params.prompt);\r\n  const [loading,setLoading] = useState(true);\r\n\r\n  const getResponse = async () => {\r\n    try {\r\n      const url = 'https://api.openai.com/v1/chat/completions'\r\n      const config = {\r\n        headers: {\r\n          Accept: 'application/json, text/plain, */*',\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer '+open_api_key,\r\n        },\r\n      }\r\n      const msg_data = {\r\n        \"model\": \"gpt-3.5-turbo\",\r\n        \"messages\": [{\"role\": \"user\", \"content\": prompt}],\r\n        \"temperature\": 0.7\r\n      }\r\n      const response = await axios.post(url, msg_data, config)\r\n      const result = await response.data;\r\n      setLoading(false);\r\n      setData(result);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {getResponse()}, [prompt])\r\n\r\n  const ChatResponse = ({role,content}) => (\r\n    <View style={{backgroundColor:'lightblue',margin:10,padding:20,}}>\r\n        <Text>ChatGPT Response to the prompt is:</Text>\r\n        <Text style={{backgroundColor:'white'}}>{content}</Text>\r\n    </View>\r\n  );\r\n\r\n  const debugging = true;\r\n  return (\r\n    <SafeAreaView style={{flex:1, fontSize:24,margin:30}}>\r\n        <Text>API Demo</Text>\r\n        <Text style={{marginTop:30}}>Prompt: </Text>\r\n        <TextInput\r\n            style={{ height: 40, borderColor: 'gray', borderWidth: 1, padding:10, margin:10 }}\r\n            onChangeText={text => setPromptText(text)}\r\n            value={promptText}\r\n        />\r\n\r\n        <Button\r\n            onPress={() => {setLoading(true); setData({choices:[]}); setPrompt(promptText);}}\r\n            title={loading?'awaiting response':\"Ask GPT\"}\r\n            color=\"#841584\"\r\n            accessibilityLabel=\"Send\"\r\n        />\r\n\r\n        {debugging && \r\n        <Text>\r\n            {JSON.stringify(data.choices) }\r\n        </Text>}\r\n\r\n        <FlatList\r\n            data={data.choices}\r\n            keyExtractor={({ index }) => index}\r\n            renderItem={({item}) => (\r\n                <ChatResponse {...item.message} />\r\n            )}\r\n        />\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nexport default ChatGPTDemo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}