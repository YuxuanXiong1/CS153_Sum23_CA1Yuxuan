{"ast":null,"code":"import * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport CountChange from \"./CountChange\";\nimport TodoList from \"./TodoList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {});\n};\nvar ProfileScreen = function ProfileScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  return _jsxs(Text, {\n    children: [\"This is \", route.params.name, \"'s profile\"]\n  });\n};\nvar intro = function intro(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsx(Text, {\n    children: \"This is an app developed by Yuxuan Xiong, whcih the user can input somethings he or she need to do after that, when user complete it, they can change the status of it into complete, and also they can level the importance of each things ther need to do.\"\n  });\n};\nvar MyStack = function MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Welcome, this is the base of the final project'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Profile\",\n        component: ProfileScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Introduction\",\n        component: intro\n      }), _jsx(Stack.Screen, {\n        name: \"CountChange\",\n        component: CountChange\n      }), _jsx(Stack.Screen, {\n        name: \"TodoList\",\n        component: TodoList\n      })]\n    })\n  });\n};\nexport default MyStack;","map":{"version":3,"names":["React","Button","Text","View","NavigationContainer","createNativeStackNavigator","CountChange","TodoList","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","ProfileScreen","_ref2","route","children","params","name","intro","_ref3","MyStack","Navigator","Screen","component","options","title"],"sources":["C:/Users/79181/OneDrive/Documents/GitHub/reactnative/code/AwesomeProject/components/StackDemo.js"],"sourcesContent":["import * as React from 'react';\r\nimport {Button,Text,View} from 'react-native';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport CountChange from './CountChange';\r\nimport TodoList from './TodoList';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n    return (\r\n     <View>\r\n            \r\n     </View>\r\n    );\r\n  };\r\n\r\n  const ProfileScreen = ({navigation, route}) => {\r\n    return <Text>This is {route.params.name}'s profile</Text>;\r\n  };\r\n\r\n  const intro = ({navigation}) => {\r\n    return <Text>This is an app developed by Yuxuan Xiong, whcih the user can input somethings he or she need to do\r\n      after that, when user complete it, they can change the status of it into complete, and also they can level the importance of each things ther\r\n      need to do.\r\n    </Text>;\r\n  };\r\n\r\nconst MyStack = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen\r\n          name=\"Home\"\r\n          component={HomeScreen}\r\n          options={{title: 'Welcome, this is the base of the final project'}}\r\n        />\r\n        <Stack.Screen name=\"Profile\" component={ProfileScreen} />\r\n        <Stack.Screen name=\"Introduction\" component={intro} />\r\n        <Stack.Screen name=\"CountChange\" component={CountChange} />\r\n        <Stack.Screen name=\"TodoList\" component={TodoList} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default MyStack;\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,MAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE/B,SAAQC,mBAAmB,QAAO,0BAA0B;AAC5D,SAAQC,0BAA0B,QAAO,gCAAgC;AACzE,OAAOC,WAAW;AAClB,OAAOC,QAAQ;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,IAAMC,KAAK,GAAGP,0BAA0B,CAAC,CAAC;AAE1C,IAAMQ,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC3B,OACCN,IAAA,CAACN,IAAI,IAEC,CAAC;AAEV,CAAC;AAED,IAAMa,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,KAAA,EAA4B;EAAA,IAAvBF,UAAU,GAAAE,KAAA,CAAVF,UAAU;IAAEG,KAAK,GAAAD,KAAA,CAALC,KAAK;EACvC,OAAOP,KAAA,CAACT,IAAI;IAAAiB,QAAA,GAAC,UAAQ,EAACD,KAAK,CAACE,MAAM,CAACC,IAAI,EAAC,YAAU;EAAA,CAAM,CAAC;AAC3D,CAAC;AAED,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,KAAA,EAAqB;EAAA,IAAhBR,UAAU,GAAAQ,KAAA,CAAVR,UAAU;EACxB,OAAON,IAAA,CAACP,IAAI;IAAAiB,QAAA,EAAC;EAGb,CAAM,CAAC;AACT,CAAC;AAEH,IAAMK,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,OACEf,IAAA,CAACL,mBAAmB;IAAAe,QAAA,EAClBR,KAAA,CAACC,KAAK,CAACa,SAAS;MAAAN,QAAA,GACdV,IAAA,CAACG,KAAK,CAACc,MAAM;QACXL,IAAI,EAAC,MAAM;QACXM,SAAS,EAAEd,UAAW;QACtBe,OAAO,EAAE;UAACC,KAAK,EAAE;QAAgD;MAAE,CACpE,CAAC,EACFpB,IAAA,CAACG,KAAK,CAACc,MAAM;QAACL,IAAI,EAAC,SAAS;QAACM,SAAS,EAAEX;MAAc,CAAE,CAAC,EACzDP,IAAA,CAACG,KAAK,CAACc,MAAM;QAACL,IAAI,EAAC,cAAc;QAACM,SAAS,EAAEL;MAAM,CAAE,CAAC,EACtDb,IAAA,CAACG,KAAK,CAACc,MAAM;QAACL,IAAI,EAAC,aAAa;QAACM,SAAS,EAAErB;MAAY,CAAE,CAAC,EAC3DG,IAAA,CAACG,KAAK,CAACc,MAAM;QAACL,IAAI,EAAC,UAAU;QAACM,SAAS,EAAEpB;MAAS,CAAE,CAAC;IAAA,CACtC;EAAC,CACC,CAAC;AAE1B,CAAC;AAED,eAAeiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}